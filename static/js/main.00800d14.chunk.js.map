{"version":3,"sources":["assets/logo.svg","common/models/index.ts","common/models/AjaxResponseType.ts","common/models/HTTPRequestMethod.ts","assets/loginCover.png","assets/spinner.svg","assets/Check.svg","assets/Loupe.svg","assets/filled-star.svg","assets/star.svg","assets/empty-icon.svg","modules/products/store/epics/productsEpics.ts","providers/AppProviders.tsx","modules/products/store/actions/productsActions.ts","common/errors/AppError.ts","common/errors/HttpError.ts","common/errors/ResponseDataValidationError.ts","common/services/HttpService.ts","config/variables.ts","modules/products/types/ProductsData.ts","modules/products/types/FetchProductsPayload.ts","modules/products/utils/parseProducts.ts","modules/products/services/productsService.ts","config/rootService.ts","config/rootEpic.ts","modules/products/store/reducers/productsReducer.ts","modules/products/store/selectors.ts","config/rootStore.ts","config/styles/variables.ts","routing/AppRoute.enum.ts","config/styles/GlobalStyles.ts","common/components/styled/PrimaryButton.ts","common/components/styled/SecondaryButton.ts","common/components/styled/Spinner.ts","common/components/Input/styles.ts","common/components/Input/Input.tsx","common/helpers/mediaQuery.ts","modules/login/components/LoginForm/styles.ts","modules/login/components/LoginForm/LoginForm.tsx","modules/login/pages/Login/styles.ts","modules/login/pages/Login/Login.tsx","common/components/Checkbox/styles.ts","common/components/Checkbox/Checkbox.tsx","modules/products/components/SearchForm/styles.ts","modules/products/components/SearchForm/SearchForm.tsx","modules/products/components/Header/styles.ts","modules/products/components/Header/Header.tsx","modules/products/components/ProductModal/styles.ts","modules/products/components/ProductModal/ProductModal.tsx","modules/products/components/Product/styles.ts","modules/products/components/Product/Product.tsx","modules/products/components/Pagination/styles.ts","modules/products/components/Pagination/Pagination.tsx","modules/products/components/EmptyInfo/styles.ts","modules/products/components/EmptyInfo/EmptyInfo.tsx","modules/products/components/ProductsList/styles.ts","modules/products/components/ProductsList/ProductsList.tsx","modules/products/pages/Products/styles.ts","modules/products/pages/Products/Products.tsx","routing/AppRoutes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AjaxResponseType","HTTPRequestMethod","productsService","AppProviders","children","fetchProductsAsync","createAsyncAction","setSearchDetails","createAction","AppError","name","originalError","message","Error","HttpError","status","ResponseDataValidationError","validationErrors","createResponseDataValidationError","errors","HttpService","baseUrl","url","responseType","params","urlWithParams","objectToQueryString","this","makeRequest","method","GET","body","JSON","ajax","pipe","map","right","catchError","error","of","left","createHttpError","obj","Object","keys","key","join","BASE_URL","process","apiEndpoints","ProductsLinks","t","search","limit","page","promo","active","first","last","next","previous","ProductsMeta","currentPage","itemCount","itemsPerPage","totalItems","totalPages","Product","id","description","rating","image","ProductsData","items","links","meta","parseProducts","data","decode","mapLeft","ProductsService","httpService","fetchProductsPayload","get","mapEither","response","chain","rootEpic","combineEpics","action$","debounceTime","filter","isActionOf","actions","request","pluck","switchMap","payload","getProducts","fold","failure","success","initialProductsState","productsMeta","undefined","isFetchingProducts","searchDetails","productsReducer","createReducer","handleAction","state","getProductsState","products","getSearchDetails","createSelector","getProductsMeta","getIsFetchingProducts","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","AppRoute","fontFamily","fontSizes","colors","breakpoints","GlobalStyles","createGlobalStyle","PrimaryButton","styled","button","disabled","SecondaryButton","Spinner","img","Input","input","Label","label","placeholder","type","mediaQ","size","mediaQuery","small","medium","large","extraLarge","big","huge","Form","form","Link","_Link","LoginForm","to","LoginWrapper","div","LoginImage","FormWrapper","Logo","Login","src","LoginCover","HiddenCheckbox","attrs","Icon","StyledCheckbox","checked","CheckboxContainer","Checkbox","isChecked","handleChange","onChange","Check","SearchForm","SearchInput","Loupe","CheckboxWrapper","changeSearchDetails","onSubmit","e","preventDefault","value","target","Header","header","LoginButton","props","login","Modal","_Modal","OverlayStyles","backgroundColor","Image","ProductName","h3","ProductDescription","p","ProductModal","isModalOpen","toogleModal","product","visible","onCancel","footer","maskStyle","S","alt","ProductWrapper","section","isActive","ContentWrapper","StarsWrapper","Star","_PrimaryButton","PromoLabel","span","useState","setIsModalOpen","starsData","Array","fill","prevState","isFilled","idx","FilledStar","EmptyStar","onClick","PaginationWrapper","PaginationButton","Pagination","_Pagination","fetchSpecificPage","currentPageNumber","parseInt","isFirstPage","isLastPage","fetchWithScroll","window","scroll","top","behavior","total","pageSize","showSizeChanger","current","EmptyInfoWrapper","EmptyInfoIcon","EmptyInfoHeader","EmptyInfoText","EmptyInfo","EmptyIcon","main","ProductsList","isPaginationNeeded","length","ProductsWrapper","Products","useSelector","dispatch","useDispatch","useCallback","useEffect","AppRoutes","path","home","exact","component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00800d14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.44c89fc4.svg\";","export * from './AjaxResponseType';\nexport * from './HTTPRequestMethod';\nexport * from './Params';\n","export enum AjaxResponseType {\n  JSON = 'json',\n  TEXT = 'text',\n}\n","export enum HTTPRequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n}\n","module.exports = __webpack_public_path__ + \"static/media/loginCover.fcf9f4a0.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.8c25c2b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Check.7335ef80.svg\";","module.exports = __webpack_public_path__ + \"static/media/Loupe.1f9315f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/filled-star.78a96900.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.2f01c390.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-icon.ed5a35d5.svg\";","import { combineEpics } from 'redux-observable';\nimport { map, pluck, filter, switchMap, debounceTime } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { fold } from 'fp-ts/es6/Either';\n\nimport { Epic } from 'config/rootStore';\nimport { AppError } from 'common/errors';\n\nimport { ProductsData } from '../../types';\nimport * as actions from '../actions/productsActions';\nimport { ProductsService } from 'modules/products/services';\n\nexport const productsEpicFactory = (productsService: ProductsService): Epic => {\n  const getProducts: Epic = action$ =>\n    action$.pipe(\n      debounceTime(300),\n      filter(isActionOf(actions.fetchProductsAsync.request)),\n      pluck('payload'),\n      switchMap(payload => productsService.getProducts(payload)),\n      map(\n        fold<AppError, ProductsData, actions.ProductsActions>(\n          actions.fetchProductsAsync.failure,\n          actions.fetchProductsAsync.success,\n        ),\n      ),\n    );\n  return combineEpics(getProducts);\n};\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { AppProvidersProps } from './AppProviders.types';\n\nexport const AppProviders = ({ children }: AppProvidersProps) => <Router>{children}</Router>;\n","import { createAsyncAction, createAction, ActionType } from 'typesafe-actions';\n\nimport { FetchProductsPayload, ProductsData } from '../../types';\nimport { AppError } from 'common/errors';\n\nexport const fetchProductsAsync = createAsyncAction(\n  'GET_PRODUCTS_REQUESTED',\n  'GET_PRODUCTS_SUCCEED',\n  'GET_PRODUCTS_FAILED',\n)<FetchProductsPayload, ProductsData, AppError>();\n\nexport const setSearchDetails = createAction('SET_SEARCH_DETAILS')<FetchProductsPayload>();\n\nconst productsActions = {\n  fetchProductsAsync: fetchProductsAsync,\n  setSearchDetails: setSearchDetails,\n};\n\nexport type ProductsActions = ActionType<typeof productsActions>;\n","export class AppError extends Error {\n    constructor(\n        public readonly name: string,\n        public readonly originalError: unknown,\n        message: string,\n    ) {\n        super(message);\n    }\n}\n","import { AppError } from './AppError';\n\nexport class HttpError extends AppError {\n    constructor(public readonly status: number, originalError: unknown, message: string) {\n        super('HttpError', originalError, message);\n    }\n}\n\nexport const createHttpError = (\n    status: number,\n    originalError: unknown,\n    message = 'Failed to execute http request',\n) => new HttpError(status, originalError, message);\n","import { Errors } from 'io-ts';\n\nimport { AppError } from './AppError';\n\nexport class ResponseDataValidationError extends AppError {\n  constructor(public readonly validationErrors: Errors, message: string) {\n    super('ValidationError', null, message);\n  }\n}\n\nexport const createResponseDataValidationError = (\n  errors: Errors,\n  message = 'Invalid response date format',\n) => new ResponseDataValidationError(errors, message);\n","import { Observable, of } from 'rxjs';\nimport { ajax, AjaxResponse, AjaxError } from 'rxjs/ajax';\nimport { map, catchError } from 'rxjs/operators';\nimport { Either, left, right } from 'fp-ts/es6/Either';\n\nimport { HttpError, createHttpError } from 'common/errors';\n\nimport { Params, HTTPRequestMethod, AjaxResponseType } from '../models';\n\ntype HttpResponse = Observable<Either<HttpError, AjaxResponse>>;\n\ntype HttpGetRequest = {\n  url: string;\n  responseType?: AjaxResponseType;\n  params?: Params;\n};\n\nexport class HttpService {\n  constructor(private readonly baseUrl: string) {}\n\n  public get({ url, responseType, params = {} }: HttpGetRequest): HttpResponse {\n    const urlWithParams = `${url}?${HttpService.objectToQueryString(params)}`;\n\n    return this.makeRequest({\n      url: urlWithParams,\n      method: HTTPRequestMethod.GET,\n      responseType,\n    });\n  }\n\n  private makeRequest({\n    url,\n    method,\n    body,\n    responseType = AjaxResponseType.JSON,\n  }: {\n    url: string;\n    method: HTTPRequestMethod;\n    body?: unknown;\n    responseType?: AjaxResponseType;\n  }): HttpResponse {\n    return ajax({\n      url: `${this.baseUrl}${url}`,\n      method,\n      responseType,\n      body,\n    }).pipe(\n      map(right),\n      catchError((error: AjaxError) => of(left(createHttpError(error.status, error)))),\n    );\n  }\n\n  static objectToQueryString(obj: Params): string {\n    return Object.keys(obj)\n      .map(key => `${key}=${obj[key]}`)\n      .join('&');\n  }\n}\n","export const BASE_URL = `${process.env.REACT_APP_API_URL}`;\n\nexport const apiEndpoints = {\n  products: '/product',\n};\n","import * as t from 'io-ts';\n\nexport const ProductsLinks = t.type({\n  first: t.string,\n  last: t.string,\n  next: t.string,\n  previous: t.string,\n});\n\nexport interface ProductsLinks extends t.TypeOf<typeof ProductsLinks> {}\n\nexport const ProductsMeta = t.type({\n  currentPage: t.string,\n  itemCount: t.number,\n  itemsPerPage: t.string,\n  totalItems: t.number,\n  totalPages: t.number,\n});\n\nexport interface ProductsMeta extends t.TypeOf<typeof ProductsMeta> {}\n\nexport const Product = t.type({\n  id: t.number,\n  name: t.string,\n  description: t.string,\n  rating: t.number,\n  image: t.string,\n  promo: t.boolean,\n  active: t.boolean,\n});\n\nexport interface Product extends t.TypeOf<typeof Product> {}\n\nexport const ProductsData = t.type({\n  items: t.array(Product),\n  links: ProductsLinks,\n  meta: ProductsMeta,\n});\n\nexport interface ProductsData extends t.TypeOf<typeof ProductsData> {}\n","import * as t from 'io-ts';\n\nexport const FetchProductsPayload = t.type({\n  search: t.string,\n  limit: t.number,\n  page: t.number,\n  promo: t.boolean,\n  active: t.boolean,\n});\n\nexport interface FetchProductsPayload extends t.TypeOf<typeof FetchProductsPayload> {}\n","import { Either, mapLeft } from 'fp-ts/es6/Either';\nimport { pipe } from 'fp-ts/es6/pipeable';\n\nimport { createResponseDataValidationError, ResponseDataValidationError } from 'common/errors';\n\nimport { ProductsData } from '../types';\n\nexport const parseProducts = (data: unknown): Either<ResponseDataValidationError, ProductsData> =>\n  pipe(ProductsData.decode(data), mapLeft(createResponseDataValidationError));\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { chain, Either, map as mapEither } from 'fp-ts/es6/Either';\n\nimport { AppError } from 'common/errors';\nimport { HttpService } from 'common/services';\nimport { apiEndpoints } from 'config/variables';\n\nimport { parseProducts } from '../utils';\nimport { FetchProductsPayload, ProductsData } from '../types';\n\nexport class ProductsService {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public getProducts(\n    fetchProductsPayload: FetchProductsPayload,\n  ): Observable<Either<AppError, ProductsData>> {\n    return this.httpService\n      .get({ url: apiEndpoints.products, params: { ...fetchProductsPayload } })\n      .pipe(\n        map(mapEither(({ response }) => response)),\n        map(chain<AppError, unknown, ProductsData>(parseProducts)),\n      );\n  }\n}\n","import { HttpService } from 'common/services/HttpService';\nimport { ProductsService } from 'modules/products/services';\n\nimport { BASE_URL } from './variables';\n\nexport const httpService = new HttpService(BASE_URL);\nexport const productsService = new ProductsService(httpService);\n\nexport const rootService = {\n  httpService,\n  productsService,\n} as const;\n\nexport type RootService = typeof rootService;\n","import { combineEpics } from 'redux-observable';\n\nimport { productsEpicFactory } from 'modules/products/store/epics';\n\nimport { productsService } from './rootService';\n\nexport const rootEpic = combineEpics(productsEpicFactory(productsService));\n","import { createReducer } from 'typesafe-actions';\n\nimport { AppAction } from 'config/rootAction';\n\nimport * as actions from '../actions/productsActions';\nimport { FetchProductsPayload, Product, ProductsMeta } from '../../types';\n\nexport interface ProductsState {\n  isFetchingProducts: boolean;\n  items: Product[];\n  productsMeta?: ProductsMeta;\n  error: string;\n  searchDetails: FetchProductsPayload;\n}\n\nexport const initialProductsState: ProductsState = {\n  items: [],\n  productsMeta: undefined,\n  isFetchingProducts: false,\n  error: '',\n  searchDetails: {\n    search: '',\n    limit: 8,\n    page: 1,\n    promo: false,\n    active: true,\n  },\n};\n\nexport const productsReducer = createReducer<ProductsState, AppAction>(initialProductsState)\n  .handleAction(actions.fetchProductsAsync.request, state => ({\n    ...state,\n    isFetchingProducts: true,\n  }))\n  .handleAction(actions.fetchProductsAsync.success, (state, { payload: { items, meta } }) => ({\n    ...state,\n    isFetchingProducts: false,\n    productsMeta: meta,\n    items,\n  }))\n  .handleAction(actions.fetchProductsAsync.failure, (state, { payload }) => ({\n    ...state,\n    isFetchingProducts: false,\n    error: payload.message,\n  }))\n  .handleAction(actions.setSearchDetails, (state, { payload }) => ({\n    ...state,\n    searchDetails: payload,\n  }));\n","import { createSelector } from 'reselect';\n\nimport { AppState } from 'config/rootStore';\n\nexport const getProductsState = (state: AppState) => state.products;\nexport const getSearchDetails = createSelector(getProductsState, state => state.searchDetails);\nexport const getProducts = createSelector(getProductsState, state => state.items);\nexport const getProductsMeta = createSelector(getProductsState, state => state.productsMeta);\nexport const getIsFetchingProducts = createSelector(\n  getProductsState,\n  state => state.isFetchingProducts,\n);\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { Epic as _Epic } from 'redux-observable';\n\nimport { AppAction } from './rootAction';\nimport { rootEpic } from './rootEpic';\n\nimport { productsReducer } from 'modules/products/store';\n\nexport type AppState = ReturnType<typeof rootReducer>;\nexport type Epic = _Epic<AppAction, AppAction, AppState>;\n\nexport const rootReducer = combineReducers({ products: productsReducer });\n\nconst epicMiddleware = createEpicMiddleware<AppAction, AppAction, AppState>();\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(epicMiddleware)));\n\nepicMiddleware.run(rootEpic);\n","export const fontFamily = {\n  primary: \"'Nunito', sans-serif\",\n};\n\nexport const fontSizes = {\n  tiny: '10px',\n  small: '12px',\n  normal: '14px',\n  medium: '16px',\n  large: '18px',\n  big: '24px',\n  huge: '32px',\n};\n\nexport const colors = {\n  white: '#ffffff',\n  black: '#1A1B1D',\n  primary: '#2140E8',\n  primaryLight: '#4460F7',\n  secondary: '#F9A52B',\n  lighestGray: '#F0F1F5',\n  lightGray: '#E0E2EA',\n  gray: '#B9BDCF',\n  darkGray: '#9194A5',\n  background: '#F2F2F2',\n};\n\nexport const breakpoints = {\n  small: 576,\n  medium: 768,\n  large: 992,\n  extraLarge: 1200,\n  big: 1400,\n  huge: 1700,\n};\n","export enum AppRoute {\n  home = '/',\n  login = '/login',\n}\n","import { createGlobalStyle } from 'styled-components';\nimport 'antd/dist/antd.css';\n\nimport { fontFamily, fontSizes, colors } from './variables';\n\nexport const GlobalStyles = createGlobalStyle`\n    html, body, #root {\n        height: 100%;\n    }\n    body {\n        margin: 0;\n        font-family: ${fontFamily.primary};\n        font-size: ${fontSizes.normal};\n        color: ${colors.black};\n        background-color: ${colors.background};\n    }\n`;\n","import styled from 'styled-components';\n\nimport { colors } from 'config/styles';\n\ninterface PrimaryButtonProps {\n  disabled?: boolean;\n}\n\nexport const PrimaryButton = styled.button<PrimaryButtonProps>`\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  height: 2.5rem;\n  background: ${({ disabled }) => (disabled ? colors.darkGray : colors.primaryLight)};\n  border-radius: 0.25rem;\n  border: none;\n  color: ${colors.white};\n  transition: 0.3s;\n  margin: 0.5rem 0rem;\n\n  :hover {\n    background: ${({ disabled }) => !disabled && colors.primary};\n  }\n`;\n","import styled from 'styled-components';\n\nimport { colors } from 'config/styles';\n\ninterface PrimaryButtonProps {\n  disabled?: boolean;\n}\n\nexport const SecondaryButton = styled.button<PrimaryButtonProps>`\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  height: 2.5rem;\n  color: ${({ disabled }) => (disabled ? colors.darkGray : colors.primaryLight)};\n  border-radius: 0.25rem;\n  border: 1px solid ${colors.primaryLight};\n  background-color: ${colors.white};\n  transition: 0.3s;\n  margin: 0.5rem 0rem;\n\n  :hover {\n    color: ${({ disabled }) => !disabled && colors.primary};\n    border-color: ${({ disabled }) => !disabled && colors.primary};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.img`\n  width: 3.5rem;\n  height: 3.5rem;\n  margin-top: 3rem;\n  -webkit-animation: spin 2s linear infinite;\n  -moz-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nimport { colors } from 'config/styles';\n\nexport const Input = styled.input`\n  background: ${colors.white};\n  border: 1px solid ${colors.lighestGray};\n  box-sizing: border-box;\n  border-radius: 0.75rem;\n  color: ${colors.darkGray};\n  padding: 0.75rem;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  margin: 0.5rem 0;\n`;\n","import React from 'react';\n\nimport * as S from './styles';\n\ninterface InputProps {\n  label?: string;\n  placeholder?: string;\n  type: string;\n}\n\nexport const Input: React.FC<InputProps> = ({ label, placeholder, type }) => (\n  <S.Label>\n    {label}\n    <S.Input placeholder={placeholder} type={type} />\n  </S.Label>\n);\n","import { breakpoints } from 'config/styles';\n\nconst mediaQ = (size: number): string => `@media only screen and (max-width: ${size}px)`;\n\nexport const mediaQuery = {\n  small: mediaQ(breakpoints.small),\n  medium: mediaQ(breakpoints.medium),\n  large: mediaQ(breakpoints.large),\n  extraLarge: mediaQ(breakpoints.extraLarge),\n  big: mediaQ(breakpoints.big),\n  huge: mediaQ(breakpoints.huge),\n};\n","import styled from 'styled-components';\nimport { Link as _Link } from 'react-router-dom';\n\nimport { colors } from 'config/styles/';\nimport { mediaQuery } from 'common/helpers';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 70%;\n\n  ${mediaQuery.medium} {\n    width: 100%;\n  }\n`;\n\nexport const Link = styled(_Link)`\n  color: ${colors.darkGray};\n  text-decoration: underline;\n  transition: 0.3s;\n\n  :hover {\n    color: ${colors.black};\n  }\n`;\n","import React from 'react';\n\nimport * as CS from 'common/components/styled';\nimport { Input } from 'common/components/Input';\n\nimport * as S from './styles';\n\nexport const LoginForm: React.FC = () => (\n  <S.Form>\n    <h1>Login</h1>\n    <Input label=\"Username\" placeholder=\"Enter Username\" type=\"text\" />\n    <Input label=\"Password\" placeholder=\"Enter Password\" type=\"password\" />\n    <CS.PrimaryButton type=\"submit\">Log in </CS.PrimaryButton>\n    <S.Link to=\"/#\">Forgot password?</S.Link>\n  </S.Form>\n);\n","import styled from 'styled-components';\n\nimport { mediaQuery } from 'common/helpers';\n\nexport const LoginWrapper = styled.div`\n  height: 100vh;\n  position: relative;\n  display: flex;\n`;\n\nexport const LoginImage = styled.img`\n  height: 100%;\n  min-width: 35%;\n  width: auto;\n\n  ${mediaQuery.medium} {\n    display: none;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  margin: 7rem;\n  display: flex;\n  align-items: center;\n\n  ${mediaQuery.medium} {\n    margin: 1.5rem;\n  }\n`;\n\nexport const Logo = styled.img`\n  top: 2rem;\n  position: absolute;\n`;\n","import React from 'react';\n\nimport LoginCover from 'assets/loginCover.png';\nimport Logo from 'assets/logo.svg';\n\nimport { LoginForm } from '../../components/LoginForm';\nimport * as S from './styles';\n\nexport const Login = () => (\n  <S.LoginWrapper>\n    <S.LoginImage src={LoginCover} />\n    <S.FormWrapper>\n      <S.Logo src={Logo} />\n      <LoginForm />\n    </S.FormWrapper>\n  </S.LoginWrapper>\n);\n","import styled from 'styled-components';\n\nimport { colors } from 'config/styles';\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nexport const HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nexport const Icon = styled.img`\n  width: 70%;\n  height: 70%;\n`;\n\ninterface StyledCheckboxProps {\n  checked: boolean;\n}\n\nexport const StyledCheckbox = styled.div<StyledCheckboxProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  background: ${({ checked }) => (checked ? colors.primary : colors.white)};\n  border: ${({ checked }) => (checked ? 'none' : `1px solid ${colors.lighestGray}`)};\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 1px ${colors.primaryLight};\n  }\n\n  ${Icon} {\n    visibility: ${({ checked }) => (checked ? 'visible' : 'hidden')};\n  }\n`;\n\nexport const CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n","import React from 'react';\n\nimport Check from 'assets/Check.svg';\n\nimport * as S from './styles';\n\ninterface CheckboxProps {\n  label: string;\n  handleChange(isChcecked: boolean): void;\n  isChecked: boolean;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ label, isChecked, handleChange }) => (\n  <S.Label>\n    <S.CheckboxContainer>\n      <S.HiddenCheckbox checked={isChecked} onChange={() => handleChange(!isChecked)} />\n      <S.StyledCheckbox checked={isChecked}>\n        <S.Icon src={Check} />\n      </S.StyledCheckbox>\n    </S.CheckboxContainer>\n    <span>{label}</span>\n  </S.Label>\n);\n","import styled from 'styled-components';\n\nimport Loupe from 'assets/Loupe.svg';\nimport { colors } from 'config/styles';\nimport { mediaQuery } from 'common/helpers';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-grow: 1;\n  gap: 1rem;\n\n  ${mediaQuery.medium} {\n    flex-direction: column;\n    align-items: flex-start;\n    height: auto;\n    padding: 2rem 0.25rem;\n    width: 100%;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  background: ${colors.white};\n  border: 1px solid ${colors.lighestGray};\n  box-sizing: border-box;\n  border-radius: 0.75rem;\n  color: ${colors.black};\n  padding: 0.75rem;\n  min-width: 20rem;\n  background-image: url(${Loupe});\n  background-repeat: no-repeat;\n  background-position: 95% 50%;\n\n  ${mediaQuery.large} {\n    min-width: auto;\n  }\n\n  ${mediaQuery.medium} {\n    min-width: 100%;\n  }\n`;\n\nexport const CheckboxWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n","import React from 'react';\n\nimport { Checkbox } from 'common/components/Checkbox';\nimport { FetchProductsPayload } from 'modules/products/types';\n\nimport * as S from './styles';\n\ninterface SearchFormProps {\n  searchDetails: FetchProductsPayload;\n  changeSearchDetails(searchDetails: FetchProductsPayload): void;\n}\n\nexport const SearchForm: React.FC<SearchFormProps> = ({ searchDetails, changeSearchDetails }) => (\n  <S.SearchForm onSubmit={e => e.preventDefault()}>\n    <S.SearchInput\n      placeholder=\"Search\"\n      value={searchDetails.search}\n      onChange={e => changeSearchDetails({ ...searchDetails, search: e.target.value })}\n    />\n    <S.CheckboxWrapper>\n      <Checkbox\n        label=\"Active\"\n        handleChange={(active: boolean) => changeSearchDetails({ ...searchDetails, active })}\n        isChecked={searchDetails.active}\n      />\n      <Checkbox\n        label=\"Promo\"\n        handleChange={(promo: boolean) => changeSearchDetails({ ...searchDetails, promo })}\n        isChecked={searchDetails.promo}\n      />\n    </S.CheckboxWrapper>\n  </S.SearchForm>\n);\n","import styled from 'styled-components';\nimport { Link as _Link } from 'react-router-dom';\n\nimport { colors } from 'config/styles';\nimport { SecondaryButton } from 'common/components/styled';\nimport { mediaQuery } from 'common/helpers';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 2rem 10rem;\n  height: 5rem;\n  width: 100%;\n  background-color: ${colors.white};\n\n  ${mediaQuery.extraLarge} {\n    padding: 0 1rem;\n  }\n\n  ${mediaQuery.medium} {\n    position: relative;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n    height: auto;\n    padding: 2rem 1rem 0rem;\n    height: auto;\n  }\n`;\n\nexport const Logo = styled.img`\n  margin-right: 5rem;\n`;\n\nexport const Link = styled(_Link)`\n  ${mediaQuery.medium} {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n  }\n`;\n\nexport const LoginButton = styled(SecondaryButton)`\n  width: 5rem;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from 'assets/logo.svg';\nimport { AppRoute } from 'routing/AppRoute.enum';\nimport { FetchProductsPayload } from 'modules/products/types';\n\nimport { SearchForm } from '../SearchForm';\nimport * as S from './styles';\n\ninterface HeaderProps {\n  searchDetails: FetchProductsPayload;\n  changeSearchDetails(searchDetails: FetchProductsPayload): void;\n}\n\nexport const Header: React.FC<HeaderProps> = props => (\n  <S.Header>\n    <Link to={AppRoute.login}>\n      <S.Logo src={Logo} />\n    </Link>\n    <SearchForm {...props} />\n    <S.Link to={AppRoute.login}>\n      <S.LoginButton>Log in</S.LoginButton>\n    </S.Link>\n  </S.Header>\n);\n","import styled from 'styled-components';\nimport { Modal as _Modal } from 'antd';\n\nimport { colors, fontSizes } from 'config/styles';\nimport { mediaQuery } from 'common/helpers';\n\nexport const Modal = styled(_Modal)`\n  .ant-modal-content {\n    border-radius: 0.5rem;\n    margin: 1rem;\n    overflow: hidden;\n\n    ${mediaQuery.medium} {\n      margin: 0;\n    }\n  }\n  .ant-modal-body {\n    padding: 0;\n  }\n`;\n\nexport const OverlayStyles = { backgroundColor: 'rgba(0, 0, 0, 0.85)' };\n\nexport const Image = styled.img`\n  height: 50%;\n  width: 100%;\n`;\n\nexport const ProductName = styled.h3`\n  font-size: ${fontSizes.large};\n  font-weight: 600;\n  margin: 1.5rem 1rem 0.5rem;\n`;\n\nexport const ProductDescription = styled.p`\n  font-size: ${fontSizes.normal};\n  color: ${colors.darkGray};\n  margin: 0rem 1rem 3rem;\n`;\n","import React from 'react';\n\nimport * as S from './styles';\nimport { Product } from 'modules/products/types';\n\ninterface ProductModalProps {\n  isModalOpen: boolean;\n  toogleModal(): void;\n  product: Product;\n}\n\nexport const ProductModal: React.FC<ProductModalProps> = ({\n  isModalOpen,\n  toogleModal,\n  product: { name, description, image },\n}) => (\n  <S.Modal visible={isModalOpen} onCancel={toogleModal} footer={false} maskStyle={S.OverlayStyles}>\n    <S.Image src={image} alt={`${name} image`} />\n    <S.ProductName>{name}</S.ProductName>\n    <S.ProductDescription>{description}</S.ProductDescription>\n  </S.Modal>\n);\n","import styled from 'styled-components';\n\nimport { colors, fontSizes } from 'config/styles';\nimport { PrimaryButton as _PrimaryButton } from 'common/components/styled';\nimport { mediaQuery } from 'common/helpers';\n\nexport const ProductWrapper = styled.section`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  background-color: ${colors.white};\n`;\n\ninterface ImageProps {\n  isActive: boolean;\n}\n\nexport const Image = styled.img<ImageProps>`\n  height: 10rem;\n  width: 100%;\n  opacity: ${({ isActive }) => (isActive ? 1 : 0.5)};\n\n  ${mediaQuery.small} {\n    height: 55%;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  width: 100%;\n  height: 12rem;\n\n  ${mediaQuery.large} {\n    height: 15rem;\n  }\n`;\n\nexport const ProductName = styled.h3`\n  font-size: ${fontSizes.medium};\n  margin: 0;\n`;\n\nexport const StarsWrapper = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  padding: 0.25rem 0;\n`;\n\nexport const Star = styled.img``;\n\nexport const ProductDescription = styled.p`\n  font-size: ${fontSizes.normal};\n  color: ${colors.darkGray};\n  flex-grow: 1;\n  margin: 0;\n`;\n\nexport const PrimaryButton = styled(_PrimaryButton)`\n  height: 2.5rem;\n`;\n\nexport const PromoLabel = styled.span`\n  position: absolute;\n  top: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 4.5rem;\n  height: 1.75rem;\n\n  background-color: ${colors.secondary};\n  color: ${colors.white};\n`;\n","import React, { useState } from 'react';\n\nimport FilledStar from 'assets/filled-star.svg';\nimport EmptyStar from 'assets/star.svg';\n\nimport { Product as ProductModel } from '../../types';\nimport { ProductModal } from '../ProductModal';\nimport * as S from './styles';\n\ninterface ProductListProps {\n  product: ProductModel;\n}\n\nexport const Product: React.FC<ProductListProps> = ({\n  product,\n  product: { name, description, image, rating, promo, active },\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const starsData = new Array(5).fill(false, 0, 5).fill(true, 0, rating);\n\n  const toogleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <S.ProductWrapper>\n      <S.Image isActive={active} src={image} alt={`${name} image`} />\n      {promo && <S.PromoLabel>Promo</S.PromoLabel>}\n      <S.ContentWrapper>\n        <S.ProductName>{name}</S.ProductName>\n        <S.ProductDescription>{description}</S.ProductDescription>\n        <S.StarsWrapper>\n          {starsData.map((isFilled, idx) =>\n            isFilled ? (\n              <S.Star key={idx} src={FilledStar} alt=\"Filled star\" />\n            ) : (\n              <S.Star key={idx} src={EmptyStar} alt=\"Empty star\" />\n            ),\n          )}\n        </S.StarsWrapper>\n        <S.PrimaryButton onClick={() => active && toogleModal()} disabled={!active}>\n          {active ? 'Show details' : 'Unavailable'}\n        </S.PrimaryButton>\n        <ProductModal product={product} toogleModal={toogleModal} isModalOpen={isModalOpen} />\n      </S.ContentWrapper>\n    </S.ProductWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Pagination as _Pagination } from 'antd';\nimport { colors, fontFamily, fontSizes } from 'config/styles';\n\nexport const PaginationWrapper = styled.div`\n  width: 100%;\n  grid-column: 1/-1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  max-height: 5rem;\n`;\n\ninterface ButtonProps {\n  disabled: boolean;\n}\n\nexport const PaginationButton = styled.button<ButtonProps>`\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  border: none;\n  background: transparent;\n  color: ${({ disabled }) => disabled && colors.darkGray};\n  font-size: ${fontSizes.normal};\n  padding-bottom: 0.25rem;\n  height: 100%;\n\n  :hover {\n    color: ${({ disabled }) => !disabled && colors.primary};\n  }\n`;\n\nexport const Pagination = styled(_Pagination)`\n  .ant-pagination-prev,\n  .ant-pagination-next {\n    display: none;\n  }\n\n  .ant-pagination-item {\n    border: none;\n    background: transparent;\n    font-family: ${fontFamily.primary};\n    min-width: 0;\n  }\n\n  .ant-pagination-item a {\n    :hover {\n      color: ${colors.primary};\n    }\n  }\n\n  .ant-pagination-item-active a {\n    color: ${colors.primary};\n    padding: 0 0.5rem;\n\n    :hover {\n      color: ${colors.primary};\n    }\n  }\n`;\n","import React from 'react';\n\nimport * as S from './styles';\nimport { ProductsMeta } from '../../types';\n\ninterface PaginationProps {\n  productsMeta: ProductsMeta;\n  fetchSpecificPage(page: number): void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  fetchSpecificPage,\n  productsMeta: { totalItems, currentPage, itemsPerPage, totalPages },\n}) => {\n  const currentPageNumber = parseInt(currentPage, 10);\n  const isFirstPage = currentPageNumber === 1;\n  const isLastPage = currentPageNumber === totalPages;\n\n  const fetchWithScroll = (page: number) => {\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    fetchSpecificPage(page);\n  };\n\n  return (\n    <S.PaginationWrapper>\n      <S.PaginationButton disabled={isFirstPage} onClick={() => !isFirstPage && fetchWithScroll(1)}>\n        First\n      </S.PaginationButton>\n      <S.Pagination\n        total={totalItems}\n        onChange={fetchWithScroll}\n        pageSize={parseInt(itemsPerPage)}\n        showSizeChanger={false}\n        current={currentPageNumber}\n      />\n      <S.PaginationButton\n        disabled={isLastPage}\n        onClick={() => !isLastPage && fetchWithScroll(totalPages)}\n      >\n        Last\n      </S.PaginationButton>\n    </S.PaginationWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nimport { colors, fontSizes } from 'config/styles';\nimport { mediaQuery } from 'common/helpers';\n\nexport const EmptyInfoWrapper = styled.div`\n  width: 40%;\n  height: 20rem;\n  background-color: ${colors.white};\n  margin: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 0.5rem;\n\n  ${mediaQuery.medium} {\n    width: 90%;\n    height: 20rem;\n  }\n`;\n\nexport const EmptyInfoIcon = styled.img`\n  margin-bottom: 0.75rem;\n`;\n\nexport const EmptyInfoHeader = styled.h3`\n  font-size: ${fontSizes.large};\n  margin: 0;\n`;\n\nexport const EmptyInfoText = styled.p`\n  color: ${colors.darkGray};\n`;\n","import React from 'react';\n\nimport EmptyIcon from 'assets/empty-icon.svg';\n\nimport * as S from './styles';\n\nexport const EmptyInfo: React.FC = () => (\n  <S.EmptyInfoWrapper>\n    <S.EmptyInfoIcon src={EmptyIcon} alt=\"Empty icon\" />\n    <S.EmptyInfoHeader>Ooops… It’s empty here</S.EmptyInfoHeader>\n    <S.EmptyInfoText>There are no products on the list</S.EmptyInfoText>\n  </S.EmptyInfoWrapper>\n);\n","import styled from 'styled-components';\n\nimport { mediaQuery } from 'common/helpers';\n\nexport const ProductWrapper = styled.main`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 2rem;\n  padding: 3rem 10rem;\n\n  ${mediaQuery.big} {\n    padding: 2rem 1rem;\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  ${mediaQuery.medium} {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  ${mediaQuery.small} {\n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport { Product as ProductModel, ProductsMeta } from '../../types';\nimport { Product } from '../Product';\nimport { Pagination } from '../Pagination';\nimport { EmptyInfo } from '../EmptyInfo';\nimport * as S from './styles';\n\ninterface ProductsListProps {\n  products: ProductModel[];\n  productsMeta?: ProductsMeta;\n  fetchSpecificPage(page: number): void;\n}\n\nexport const ProductsList: React.FC<ProductsListProps> = ({\n  products,\n  productsMeta,\n  fetchSpecificPage,\n}) => {\n  const isPaginationNeeded = products.length !== productsMeta?.totalItems;\n\n  return products.length ? (\n    <S.ProductWrapper>\n      {products.map(product => (\n        <Product key={product.id} product={product} />\n      ))}\n      {isPaginationNeeded && productsMeta && (\n        <Pagination productsMeta={productsMeta} fetchSpecificPage={fetchSpecificPage} />\n      )}\n    </S.ProductWrapper>\n  ) : (\n    <EmptyInfo />\n  );\n};\n","import styled from 'styled-components';\n\nexport const ProductsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Spinner from 'assets/spinner.svg';\nimport * as CS from 'common/components/styled';\n\nimport { Header } from '../../components/Header';\nimport { ProductsList } from '../../components/ProductsList';\nimport {\n  fetchProductsAsync,\n  getProducts,\n  getSearchDetails,\n  setSearchDetails,\n  getProductsMeta,\n  getIsFetchingProducts,\n} from '../../store';\nimport { FetchProductsPayload } from '../../types';\nimport * as S from './styles';\n\nexport const Products = () => {\n  const searchDetails = useSelector(getSearchDetails);\n  const products = useSelector(getProducts);\n  const productsMeta = useSelector(getProductsMeta);\n  const isFetchingProducts = useSelector(getIsFetchingProducts);\n  const dispatch = useDispatch();\n\n  const changeSearchDetails = (searchDetails: FetchProductsPayload) => {\n    dispatch(setSearchDetails(searchDetails));\n  };\n\n  const fetchSpecificPage = useCallback(\n    (page: number) => {\n      dispatch(fetchProductsAsync.request({ ...searchDetails, page }));\n    },\n    [dispatch, searchDetails],\n  );\n\n  useEffect(() => {\n    fetchSpecificPage(1);\n  }, [fetchSpecificPage]);\n\n  return (\n    <S.ProductsWrapper>\n      <Header searchDetails={searchDetails} changeSearchDetails={changeSearchDetails} />\n      {isFetchingProducts ? (\n        <CS.Spinner src={Spinner} alt=\"Loader\" />\n      ) : (\n        <ProductsList\n          products={products}\n          productsMeta={productsMeta}\n          fetchSpecificPage={fetchSpecificPage}\n        />\n      )}\n    </S.ProductsWrapper>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Login } from 'modules/login/pages/Login';\nimport { Products } from 'modules/products/pages/Products';\n\nimport { AppRoute } from './AppRoute.enum';\n\nexport const AppRoutes = () => {\n  return (\n    <Switch>\n      <Route path={AppRoute.home} exact component={Products} />\n      <Route path={AppRoute.login} component={Login} />\n\n      <Redirect to={AppRoute.home} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from 'config/rootStore';\nimport { GlobalStyles } from 'config/styles';\nimport { AppRoutes } from 'routing/AppRoutes';\n\nexport const App = () => (\n  <Provider store={store}>\n    <GlobalStyles />\n    <AppRoutes />\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { AppProviders } from 'providers/AppProviders';\n\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}